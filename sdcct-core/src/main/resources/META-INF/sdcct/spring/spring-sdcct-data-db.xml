<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:sdcct="urn:sdcct:spring"
    xmlns:sdcct-xml="urn:sdcct:spring:xml"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        urn:sdcct:spring urn:sdcct:spring:sdcct-spring.xsd
        urn:sdcct:spring:xml urn:sdcct:spring:xml:sdcct-spring-xml.xsd">
    
    <!--====================================================================================================
    = THREAD FACTORIES
    =====================================================================================================-->
    <beans:bean id="threadFactoryDataDbServer" parent="threadFactory"
        p:daemon="false"
        p:threadNamePrefix="#{ threadGroup.name }-data-db-server-"/>
    
    <!--====================================================================================================
    = TASK SCHEDULERS
    =====================================================================================================-->
    <beans:bean id="taskSchedulerDataDbSrc" parent="taskSchedulerThreadPool"
        p:threadNamePrefix="#{ threadGroup.name }-data-db-src-"/>
    
    <!--====================================================================================================
    = CACHE MANAGERS
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="cacheManagerDb" parent="cacheManager"
        p:maxBytesLocalHeap="${sdcct.data.cache.db.heap.max}">
        <beans:property name="configuration">
            <beans:bean parent="cacheManagerConfig"/>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = CACHES
    =====================================================================================================-->
    <beans:bean id="cacheResource" parent="cache"
        p:cacheManager-ref="cacheManagerDb">
        <beans:property name="configuration">
            <beans:bean parent="cacheConfig"
                p:name="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE }"/>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = CACHE REGION FACTORIES
    =====================================================================================================-->
    <beans:bean id="cacheRegionFactory" class="gov.hhs.onc.sdcct.data.db.cache.impl.CacheRegionFactory"
        p:cacheManager-ref="cacheManagerDb"/>
    
    <!--====================================================================================================
    = DATABASE AUTHORITIES
    =====================================================================================================-->
    <beans:bean id="dbAuthority" class="gov.hhs.onc.sdcct.data.db.security.impl.DbAuthorityImpl" abstract="true"/>
    
    <beans:bean id="dbAuthoritySeq" parent="dbAuthority" abstract="true">
        <beans:constructor-arg name="objType" value="SEQUENCE"/>
        <beans:constructor-arg name="privileges">
            <beans:array>
                <beans:value>USAGE</beans:value>
            </beans:array>
        </beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="dbAuthorityTable" parent="dbAuthority" abstract="true">
        <beans:constructor-arg name="objType" value="TABLE"/>
    </beans:bean>
    
    <beans:bean id="dbAuthorityTableFull" parent="dbAuthority" abstract="true">
        <beans:constructor-arg name="objType" value="TABLE"/>
        <beans:constructor-arg name="privileges">
            <beans:array>
                <beans:value>SELECT</beans:value>
                <beans:value>INSERT</beans:value>
                <beans:value>UPDATE</beans:value>
                <beans:value>DELETE</beans:value>
            </beans:array>
        </beans:constructor-arg>
    </beans:bean>
    
    <!--====================================================================================================
    = DATABASE USERS
    =====================================================================================================-->
    <beans:bean id="dbUser" class="gov.hhs.onc.sdcct.data.db.security.impl.DbUser" abstract="true"/>
    
    <!--====================================================================================================
    = DATA SOURCE CONFIGURATIONS
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="dataSrcConfig" class="gov.hhs.onc.sdcct.data.db.jdbc.impl.SdcctDataSourceConfig"
        p:autoCommit="false"
        p:connectionTestQuery="${sdcct.data.db.pool.conn.test.query}"
        p:connectionTimeout="${sdcct.data.db.pool.conn.timeout}"
        p:driverClassName="${sdcct.data.db.jdbc.driver.class.name}"
        p:idleTimeout="${sdcct.data.db.pool.idle.timeout}"
        p:initializationFailFast="true"
        p:isolateInternalQueries="true"
        p:jdbcUrl="${sdcct.data.db.jdbc.url}"
        p:loginTimeout="${sdcct.data.db.pool.login.timeout}"
        p:loginTimeoutPropertyName="${sdcct.data.db.pool.login.timeout.prop.name}"
        p:maximumPoolSize="${sdcct.data.db.pool.size.max}"
        p:maxLifetime="${sdcct.data.db.pool.lifetime.max}"
        p:minimumIdle="${sdcct.data.db.pool.size.min}"
        p:poolName="${sdcct.data.db.pool.name}"
        p:scheduledExecutorService="#{ taskSchedulerDataDbSrc.scheduledThreadPoolExecutor }"
        p:validationTimeout="${sdcct.data.db.pool.validation.timeout}">
        <beans:property name="user">
            <!--suppress SpringPlaceholdersInspection -->
            <beans:bean parent="dbUser"
                c:name="${sdcct.data.db.user.main.name}"
                c:pass="${sdcct.data.db.user.main.pass}">
                <beans:constructor-arg name="roles">
                    <beans:array>
                        <!--suppress SpringPlaceholdersInspection -->
                        <beans:bean class="gov.hhs.onc.sdcct.data.db.security.impl.DbRole"
                            c:name="${sdcct.data.db.role.main.name}">
                            <beans:constructor-arg name="authorities">
                                <beans:array>
                                    <beans:bean parent="dbAuthoritySeq"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbSequenceNames).RESOURCE_ENTITY_ID }"/>
                                    <beans:bean parent="dbAuthoritySeq"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbSequenceNames).RESOURCE_PARAM_ENTITY_ID }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE_PARAM_DATE }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE_PARAM_NUMBER }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE_PARAM_QUANTITY }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE_PARAM_REF }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE_PARAM_STRING }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE_PARAM_TOKEN }"/>
                                    <beans:bean parent="dbAuthorityTableFull"
                                        c:objName="#{ T(gov.hhs.onc.sdcct.data.db.DbTableNames).RESOURCE_PARAM_URI }"/>
                                </beans:array>
                            </beans:constructor-arg>
                        </beans:bean>
                    </beans:array>
                </beans:constructor-arg>
            </beans:bean>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = DATABASE SERVERS
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="dbServer" class="gov.hhs.onc.sdcct.data.db.server.impl.HsqlServerImpl"
        p:databaseDirectory="${sdcct.data.db.server.dir}"
        p:databaseName="${sdcct.data.db.name}"
        p:hostAddress="${sdcct.data.db.server.host.addr}"
        p:port="${sdcct.data.db.server.port}"
        p:threadFactory-ref="threadFactoryDataDbServer">
        <beans:property name="adminUser">
            <!--suppress SpringPlaceholdersInspection -->
            <beans:bean parent="dbUser"
                c:name="${sdcct.data.db.user.admin.name}"
                c:pass="${sdcct.data.db.user.admin.pass}">
                <beans:constructor-arg name="roles">
                    <beans:array/>
                </beans:constructor-arg>
            </beans:bean>
        </beans:property>
        <beans:property name="initializationScriptSources">
            <beans:array>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:value>classpath*:${sdcct.data.db.dir.path}/db-init-sdcct.sql</beans:value>
            </beans:array>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = DATA SOURCES
    =====================================================================================================-->
    <!--suppress SpringPlaceholdersInspection -->
    <beans:bean id="dataSrc" class="gov.hhs.onc.sdcct.data.db.jdbc.impl.SdcctPooledDataSource" depends-on="dbServer"
        c:config-ref="dataSrcConfig"/>
    
    <!--====================================================================================================
    = ENTITY MANAGERS
    =====================================================================================================-->
    <beans:bean id="entityManagerFactory" class="gov.hhs.onc.sdcct.data.db.impl.SdcctEntityManagerFactoryFactoryBean"
        p:dataSource-ref="dataSrc"
        p:packagesToScan="#{ T(gov.hhs.onc.sdcct.SdcctPackages).ROOT_NAME }"
        p:persistenceUnitName="sdcct">
        <beans:property name="jpaPropertyMap">
            <beans:map>
                <beans:entry key="#{ T(org.hibernate.cfg.AvailableSettings).AUTO_EVICT_COLLECTION_CACHE }" value="true"/>
                <beans:entry key="#{ T(org.hibernate.cfg.AvailableSettings).GENERATE_STATISTICS }" value="true"/>
                <beans:entry key="#{ T(org.hibernate.cfg.AvailableSettings).INTERCEPTOR }" value-ref="entityInterceptorLogging"/>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="#{ T(org.hibernate.cfg.AvailableSettings).STATEMENT_BATCH_SIZE }" value="${sdcct.data.db.batch.size}"/>
                <beans:entry key="#{ T(org.hibernate.cfg.AvailableSettings).LOG_SESSION_METRICS }" value="false"/>
                <beans:entry key="hibernate.search.default.directory_provider" value="filesystem"/>
                <!--suppress SpringPlaceholdersInspection -->
                <beans:entry key="hibernate.search.default.#{ T(org.hibernate.search.cfg.Environment).INDEX_BASE_PROP_NAME }"
                    value="${sdcct.data.db.server.index.dir}"/>
                <beans:entry key="#{ T(org.hibernate.search.cfg.Environment).GENERATE_STATS }" value="true"/>
                <beans:entry key="#{ T(org.hibernate.search.cfg.Environment).LUCENE_MATCH_VERSION }"
                    value="#{ T(org.hibernate.search.cfg.Environment).DEFAULT_LUCENE_MATCH_VERSION }"/>
                <beans:entry key="#{ T(org.hibernate.search.cfg.Environment).WORKER_ENLIST_IN_TRANSACTION }" value="true"/>
            </beans:map>
        </beans:property>
    </beans:bean>
    
    <!--====================================================================================================
    = TRANSACTION MANAGERS
    =====================================================================================================-->
    <beans:bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory"
        p:validateExistingTransaction="true"/>
    
    <!--====================================================================================================
    = BEAN POST PROCESSORS
    =====================================================================================================-->
    <beans:bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    
    <!--====================================================================================================
    = TRANSACTIONS
    =====================================================================================================-->
    <tx:annotation-driven proxy-target-class="true" transaction-manager="txManager"/>
    
    <!--====================================================================================================
    = REPOSITORIES
    =====================================================================================================-->
    <jpa:repositories base-class="gov.hhs.onc.sdcct.data.db.impl.SdcctRepositoryImpl" base-package="gov.hhs.onc.sdcct"
        entity-manager-factory-ref="entityManagerFactory" factory-class="gov.hhs.onc.sdcct.data.db.impl.SdcctRepositoryFactoryBean"
        transaction-manager-ref="txManager"/>
</beans:beans>